<?
/*--------------------------------------------------------
 * Module Name : ProbeNetwork
 * Version : 1.0
 *
 * Software Name : UserInterface probe network
 * Version : 1.0
 *
 * Copyright © 2013 France Télécom
 * This software is distributed under the Apache 2 license
 * <http://www.apache.org/licenses/LICENSE-2.0.html>
 *
 *--------------------------------------------------------
 * Filec Name   : resources/Resources.php
 *
 * Created     : 2013-03
 * Authors     : Benoit HERARD <benoit.herard(at)orange.com>
 *
 * Description :
 *     REST handler for /resources/probe request
 *--------------------------------------------------------
 * History     :
 * 1.0.0 - 2013-03-20 : Release of the file
 */

require_once('../include/commonHeaders.php');

require_once '../objects/Error.class.php';
require_once '../include/Constants.php';
require_once '../include/Func.inc.php';
require_once '../include/Settings.ini.php';
require_once '../include/BDMySQL.inc';
require_once '../include/BDControls.inc';


class Token{
	
	function getAleat(){
		return sprintf("-%010d", rand(1,1000000000)); 
	}

	/**
	 * @url POST 
	 * @url GET 
	 */
	function generate(){
		GLOBAL $BDName;
		GLOBAL $BDUser;
		GLOBAL $BDPwd;
		
		$requestor=getRequestor($_REQUEST);
		$token=time() . $this->getAleat() . $this->getAleat() . $this->getAleat() . $this->getAleat() ;
		
		$strSQL="";
		$strSQL=$strSQL . "INSERT INTO authtoken (token, validUntil, userName) ";
		$strSQL=$strSQL . "VALUES (";
		$strSQL=$strSQL . 		"'" . DoubleQuote($token) . "',";
		$strSQL=$strSQL . 		" date_add(now() ,interval " . authTokenTTL . " minute) , ";
		$strSQL=$strSQL . 		"'" . DoubleQuote($requestor) . "'";
		$strSQL=$strSQL . ")";
		$cnx = new Connexion();
	
		if (!$cnx->Ouvrir($BDName, $BDUser, $BDPwd )){
			throw new RestException(500,$cnx->Erreur->GetTexte());
		}else{
			$rqt = new RequeteResultat();
			if (!$rqt->Executer("DELETE FROM authtoken WHERE validUntil<now()",$cnx)){
				$cnx->Fermer();
				throw new RestException(500,$rqt->Erreur->GetTexte());
			}
			if (!$rqt->Executer($strSQL,$cnx)){
				$cnx->Fermer();
				throw new RestException(500,$rqt->Erreur->GetTexte());
			}
			$rqt->Fermer();
			$cnx->Fermer();
		}
		return Array("token" => $token);
	
	}
	
}
