<?php
/*--------------------------------------------------------
 * Module Name : ApplianceManager
 * Version : 1.0.0
 *
 * Software Name : OpenServicesAccess
 * Version : 1.0
 *
 * Copyright (c) 2011 â€“ 2014 Orange
 * This software is distributed under the Apache 2 license
 * <http://www.apache.org/licenses/LICENSE-2.0.html>
 *
 *--------------------------------------------------------
 * File Name   : ApplianceManager/ApplianceManager.php/scripts/generateApacheConfig.php
 *
 * Created     : 2012-02
 * Authors     : Benoit HERARD <benoit.herard(at)orange.com>
 *
 * Description :
 *      .../...
 *--------------------------------------------------------
 * History     :
 * 1.0.0 - 2012-10-01 : Release of the file
*/

require_once '../include/Constants.php';
require_once '../include/Settings.ini.php';
require_once '../include/Func.inc.php';
require_once '../include/BDMySQL.inc';
require_once '../include/BDControls.inc';




	$cnx = new Connexion();
	
	if (!$cnx->Ouvrir($BDName, $BDUser, $BDPwd )){
		exit(1);
	}
	
	
	$strSQLBase="";
	$strSQLBase= $strSQLBase . "SELECT 	* ";
	$strSQLBase= $strSQLBase . "FROM	services s ";
	$strSQLBase= $strSQLBase . "WHERE 	s.isPublished=1 ";
	$strSQLBase= $strSQLBase . "AND 	( ";
	$strSQLBase= $strSQLBase . "			onAllNodes=1 ";
	$strSQLBase= $strSQLBase . "		OR ";
	$strSQLBase= $strSQLBase . "			exists(SELECT 'x' FROM servicesnodes sn WHERE sn.serviceName=s.serviceName AND sn.nodeName='" . DoubleQuote($_REQUEST["node"]) . "') ";
	$strSQLBase= $strSQLBase . "		) ";
	
	$strSQL = $strSQLBase . " ORDER BY frontEndEndPoint ASC"; 
	$services = new RequeteResultat();
	if (!$services->Ouvrir($strSQL, $cnx)){
		exit(1);
	}
	
	header("Content-Type: text/plain");
	echo "#######################################################################\n";
	echo "#\n";
	echo "#                         IMPORTANT NOTE\n";
	echo "#\n";
	echo "# This file is auto generated by ApplianceManager (GUI/REST-services)\n";
	echo "# Any modification done manually in this will be erased on next\n";
	echo "# regeneration by the application\n";
	echo "#\n";
	echo "#######################################################################\n";
	echo "\n\n\n";
		
	while (!$services->EOF()){
		$BACK_END     = $services->Champ("backEndEndPoint");
		$FRONT_END    = $services->Champ("frontEndEndPoint");
		$GROUP_NAME   = $services->Champ("groupName");
		$SERVICE_NAME = $services->Champ("serviceName");
		if ($services->Champ("isGlobalQuotasEnabled")==1){
			$GLOBAL_QUOTA_ENABLE="On";
		}else{
			$GLOBAL_QUOTA_ENABLE="Off";
		}
		if ($services->Champ("isUserQuotasEnabled")==1){
			$USER_QUOTA_ENABLE="On";
		}else{
			$USER_QUOTA_ENABLE="Off";
		}
		$BASIC_ATUH_TOKEN="";
		if ($services->Champ("backEndUsername") != "" && decrypt($services->Champ("backEndPassword")) != ""){
			$BASIC_ATUH_TOKEN=base64_encode($services->Champ("backEndUsername") . ":" . decrypt($services->Champ("backEndPassword")));
		}
		$FORWARD_IDENT=true;
		if ($services->Champ("isIdentityForwardingEnabled")==0){
			$FORWARD_IDENT=false;
		}
		//$BACK_END_DOMAIN=getServerDomain($BACK_END);
		//$BACK_END_PATH = getPath($BACK_END);
		$FRONT_END_TOP_DOMAIN="";
		$FRONT_END_DOMAIN=$_REQUEST["domain"] ;
		$domParts=explode(".", $_REQUEST["domain"]);
		if (count($domParts)>1){
			for ($i=1;$i<count($domParts);$i++){
				$FRONT_END_TOP_DOMAIN = $FRONT_END_TOP_DOMAIN . "." . $domParts[$i];
			}
		}else{
			$FRONT_END_TOP_DOMAIN=$FRONT_END_DOMAIN;
		}
		if ($services->Champ("isHitLoggingEnabled")==1){
			$HIT_LOGGING_ENABLE="On";
		}else{
			$HIT_LOGGING_ENABLE="Off";
		}
		if ($services->Champ("isUserAuthenticationEnabled")==1){
			$USER_AUTHENTICATION_ENABLE="On";
			$BASIC_AUTH_ENABLED= ($_REQUEST["BasicAuthEnabled"] == 1);
			$COOKIE_AUTH_ENABLED= ($_REQUEST["CookieAuthEnabled"] == 1);
		}else{
			$USER_AUTHENTICATION_ENABLE="Off";
			$BASIC_AUTH_ENABLED= false;
			$COOKIE_AUTH_ENABLED= false;
		}
		$ANONYMOUS_ALLOWED = ($services->Champ("isAnonymousAllowed")==1);
		if ($services->Champ("additionalConfiguration") != ""){
			$ADDITIONAL_CONFIGURATION=str_replace("%{frontEndEndPoint}e", $services->Champ("frontEndEndPoint"), $services->Champ("additionalConfiguration"));
		}else{
			$ADDITIONAL_CONFIGURATION="";
		}
		
		$PUBLIC_SERVER_PREFIX=$_REQUEST["serverPrefix"];
		
		include "../resources/apache.conf/endpoint_template.php";
		$services->Suivant();
	}
	
	
	$services->Fermer();

	$strSQL= $strSQLBase . "ORDER BY frontEndEndPoint DESC ";
	
	if (!$services->Ouvrir($strSQL, $cnx)){
		exit(1);
	}
	while (!$services->EOF()){
		$BACK_END     = $services->Champ("backEndEndPoint");
		$FRONT_END    = $services->Champ("frontEndEndPoint");

		echo 'RewriteCond     %{REQUEST_URI}      ^' . $FRONT_END . '.*$' . "\n";
		echo 'RewriteRule  <?' . $FRONT_END .'(.*) ' . $BACK_END . '$1 [P,L]' . "\n\n";
		$services->Suivant();
	}
	
	$services->Fermer();


	$cnx->Fermer();	
	
	
	
