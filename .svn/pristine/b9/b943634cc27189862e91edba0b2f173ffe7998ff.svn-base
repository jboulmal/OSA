<?php
/*--------------------------------------------------------
 * Module Name : ApplianceManager
 * Version : 1.0.0
 *
 * Software Name : OpenServicesAccess
 * Version : 1.0
 *
 * Copyright © 2011 – 2014 Orange
 * This software is distributed under the Apache 2 license
 * <http://www.apache.org/licenses/LICENSE-2.0.html>
 *
 *--------------------------------------------------------
 * File Name   : ApplianceManager/ApplianceManager.php/resources/apache.conf/endpoint_template.php
 *
 * Created     : 2012-02
 * Authors     : Benoit HERARD <benoit.herard(at)orange.com>
 *
 * Description :
 *      .../...
 *--------------------------------------------------------
 * History     :
 * 1.0.0 - 2012-10-01 : Release of the file
*/

require_once '../include/Settings.ini.php'; 
require_once '../include/Constants.php'; 
?>
<Location  <?echo $FRONT_END?>>

	Include <?php echo runtimeApplianceConfigLocation?>/nursery-appliance-settings.inc	
<?php
	if (isset($BASIC_ATUH_TOKEN) && $BASIC_ATUH_TOKEN != "" ){
			echo "\tRequestHeader add Authorization \"Basic $BASIC_ATUH_TOKEN\"\n";
	}
	//echo "\tOSACookieAuthDomain " . $FRONT_END_TOP_DOMAIN . "\n";
	if ($USER_AUTHENTICATION_ENABLE=="On"){
		echo "\tAuthBasicAuthoritative Off\n";
		echo "\tOSAAuthoritative On\n";
		/*echo "\tAuthUserFile /dev/null\n";
		
		echo "\tAuthName \"Nursery open source appliance APIs\"\n";
		echo "\tAuthType Basic\n";
		echo "\tOSAEnable on\n";
		echo "require group " . $GROUP_NAME ."\n";
		 */
		echo "\tOSAEnable on\n";

	
		if ($BASIC_AUTH_ENABLED){
			echo "\tOSABasicAuthEnable On\n";
			//echo "\tOSAAuthName API access\n";

		}
		if ($COOKIE_AUTH_ENABLED){
			echo "\tOSACookieAuthEnable On\n";
			echo "\tOSACookieAuthName OSAAuthToken\n";
			echo "\tOSACookieAuthTTL 60\n";
			
		}

		if ($GROUP_NAME != "valid-user"){
			echo "\tOSARequire group  " . $GROUP_NAME ."\n";
		}else{
			echo "\tOSARequire valid-user\n";
		}
		if ($ANONYMOUS_ALLOWED){
			echo "\tOSAAllowAnonymous On\n";
		}
		
		if (!$FORWARD_IDENT){
			echo "\tRequestHeader unset " . userNameHeader . "\n";
		}else{
			echo "\tOSAIdentityHeadersMapping userName," . userNameHeader . ";firstName," . firstNameHeader . ";lastName," .lastNameHeader . ";entity," . entityHeader . ";emailAddress," . emailAddressHeader . "\n";
		}
	}else{
		echo "\tOSAEnable Off\n";
	}
	
	
	?>
	
	
	
	OSAResourceName <?echo "$SERVICE_NAME\n"?>

	OSACheckGlobalQuotas <?echo "$GLOBAL_QUOTA_ENABLE\n"?>
	OSACheckUserQuotas <?echo "$USER_QUOTA_ENABLE\n"?>


	OSALogHit <?php echo "$HIT_LOGGING_ENABLE\n"?>
	
	<?php
	$urlParts=getUrlParts($BACK_END);
	echo "ProxyPassReverseCookieDomain " . $urlParts["domain"] . " $FRONT_END_DOMAIN\n";
	if ($SERVICE_NAME != ADMIN_SERVICE && $SERVICE_NAME != ADMIN_SERVICE_AUTH && $SERVICE_NAME != ADMIN_SERVICE_AUTH_TOKEN ){
		echo "	ProxyPassReverseCookiePath /  $FRONT_END\n";
	}

	echo $ADDITIONAL_CONFIGURATION;
	?>




	ProxyPassReverse <?echo "$BACK_END\n"?>
	<?php
	/*if (ereg("^ws://[\w\d:#@%/;$()~_?\+-=\\\.&]*", $BACK_END)){
		echo "ProxyPass $BACK_END\n";
	}*/
	?>
	
</Location>

